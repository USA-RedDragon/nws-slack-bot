name: Deploy

on:
  push:
    branches: ['main']

concurrency:
  group: '${{ github.workflow }} @ ${{ github.ref }}'
  cancel-in-progress: false

env:
  # Disable Terraform telemetry
  CHECKPOINT_DISABLE: "true"

jobs:
  docker:
    permissions:
      contents: read
      packages: write
      security-events: write
    uses: USA-RedDragon/reusable-actions/.github/workflows/docker-ci.yaml@v1.0.23
    with:
      push: ${{ github.event_name != 'pull_request' }}

  var:
    needs: docker
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Output SHA
        id: output
        run: echo "TAG=sha-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    outputs:
      TAG: ${{ steps.output.outputs.TAG }}

  terraform:
    needs: var
    runs-on: ubuntu-22.04
    permissions:
      id-token: write      # Required for aws-actions/configure-aws-credentials
      contents: read       # Required for actions/checkout
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::803205869942:role/github-actions-nws-slack-bot
          aws-region: us-east-1

      - name: Place secret variables
        run: |
          echo "${TFVARS}" | base64 -d > variables.tfvars
        env:
          TFVARS: ${{ secrets.TFVARS }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -no-color -auto-approve -input=false -var-file=variables.tfvars -var docker_image="ghcr.io/usa-reddragon/nws-slack-bot:${{ needs.var.outputs.TAG }}"
