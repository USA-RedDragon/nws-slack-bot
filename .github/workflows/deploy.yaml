name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

permissions:
  id-token: write      # Required for aws-actions/configure-aws-credentials
  contents: read       # Required for actions/checkout

concurrency:
  group: '${{ github.workflow }} @ ${{ github.ref }}'
  cancel-in-progress: false

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/usa-reddragon/nws-slack-bot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  terraform:
    needs: docker
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::803205869942:role/github-actions-nws-slack-bot
          aws-region: us-east-1

      - name: Place secret variables
        run: |
          echo "${TFVARS}" | base64 -d > variables.tfvars
        env:
          TFVARS: ${{ secrets.TFVARS }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -no-color -auto-approve -input=false -var-file=variables.tfvars -var docker_image="ghcr.io/usa-reddragon/nws-slack-bot:${{ github.sha }}"
